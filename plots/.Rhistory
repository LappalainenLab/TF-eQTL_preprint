height=10, width=14)
eq8_chip_diff %>%
as.data.frame() %>%
arrange(-num_sig) %>%
mutate(tf_order = factor(paste(as.character(tf), num_sig),
levels=unique(paste(as.character(tf), num_sig))) ) %>%
ggplot(aes(diff)) +
geom_histogram(aes(fill=tf)) +
geom_vline(aes(xintercept = real)) +
facet_wrap(~tf_order, scales='free') +
theme_classic() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
strip.text.x = element_text(size=5)) +
theme(legend.position = 'none')
ggsave(paste0("figs3/",gene_list,".eq8_diff.chipseq.tfs.sortsig.pdf"),
height=10, width=14)
########### CHIP ############
eq8_chip_true_ps = eq8_chip_true %>%
group_by(tf) %>%
summarize(num_sig = first(num_sig),
real_stat = first(real),
num_lt = sum(true <= real), ## how many perms are lt real
num_gt = sum(true >= real), ## how many perms are gt real
p_perm = min( ( (min(num_lt,num_gt) + 1) / (10^4+1) ) * 2, 1),
p_perm_lt = (num_lt + 1) / (10^4+1),
p_perm_gt = (num_gt + 1) / (10^4+1))
eq8_chip_true_ps %>% filter(tf=='IRF1')
write.table(eq8_chip_true_ps, "sum_stats3/multi_or_cross_hits.eq8_true.tf_chipseq_stats.txt",
col.names=TRUE,sep='\t',quote=FALSE,row.names=FALSE)
eq8_chip_true_ps %>%
ggplot(aes(num_sig, -log10(p_perm))) +
geom_point(aes(col=tf)) +
theme_classic() +
geom_text(aes(label=ifelse(p_perm<10^-3,tf,'')),
hjust=0,vjust=0,size=2) +
theme(legend.position='none') +
xlab('Number correlated genes') +
ylab('-log10(permutation p [two-sided])') +
ggtitle(paste("ChIPseq permutation p-values [two-sided] vs. number of corr. genes per TF\n",gene_list))
eq8_chip_true_ps %>%
ggplot(aes(num_sig, -log10(p_perm_gt))) +
geom_point(aes(col=tf)) +
theme_classic() +
geom_text(aes(label=ifelse(p_perm_gt<10^-3,tf,'')),
hjust=0,vjust=0,size=2) +
theme(legend.position='none') +
xlab('Number correlated genes') +
ylab('-log10(permutation p [one-sided])') +
ggtitle(paste("ChIPseq permutation p-values [one-sided] vs. number of corr. genes per TF\n",gene_list))
cor.test(eq8_chip_true_ps$num_sig,eq8_chip_true_ps$p_perm_gt,method='spearman')
eq8_chip_diff_ps = eq8_chip_diff %>%
group_by(tf) %>%
summarize(num_sig = first(num_sig),
real_stat = first(real),
num_lt = sum(diff <= real), ## how many perms are lt real
num_gt = sum(diff >= real), ## how many perms are gt real
p_perm = min( ( (min(num_lt,num_gt) + 1) / (10^4+1) ) * 2, 1),
p_perm_lt = (num_lt + 1) / (10^4+1),
p_perm_gt = (num_gt + 1) / (10^4+1))
write.table(eq8_chip_diff_ps, "sum_stats3/multi_or_cross_hits.eq8_diff.tf_chipseq_stats.txt",
col.names=TRUE,sep='\t',quote=FALSE,row.names=FALSE)
eq8_chip_diff_ps %>%
ggplot(aes(num_sig, -log10(p_perm))) +
geom_point(aes(col=tf)) +
theme_classic() +
geom_text(aes(label=ifelse(p_perm<10^-3,tf,'')),
hjust=0,vjust=0,size=2) +
theme(legend.position='none') +
xlab('Number correlated genes') +
ylab('-log10(permutation p [two-sided])') +
ggtitle(paste("ChIPseq permutation p-values [two-sided] vs. number of corr. genes per TF\n",gene_list))
eq8_chip_diff_ps %>%
ggplot(aes(num_sig, -log10(p_perm_gt))) +
geom_point(aes(col=tf)) +
theme_classic() +
geom_text(aes(label=ifelse(p_perm_gt<10^-3,tf,'')),
hjust=0,vjust=0,size=2) +
theme(legend.position='none') +
xlab('Number correlated genes') +
ylab('-log10(permutation p [one-sided])') +
ggtitle(paste("ChIPseq permutation p-values [one-sided] vs. number of corr. genes per TF\n",gene_list))
eq8_motif_true_ps = eq8_motif_true %>%
group_by(tf) %>%
summarize(num_sig = first(num_sig),
real_stat = first(real),
num_lt = sum(true <= real), ## how many perms are lt real
num_gt = sum(true >= real), ## how many perms are gt real
p_perm = min( ( (min(num_lt,num_gt) + 1) / (10^4+1) ) * 2, 1),
p_perm_lt = (num_lt + 1) / (10^4+1),
p_perm_gt = (num_gt + 1) / (10^4+1))
write.table(eq8_motif_true_ps, "sum_stats3/multi_or_cross_hits.eq8_true.tf_motif_stats.txt",
col.names=TRUE,sep='\t',quote=FALSE,row.names=FALSE)
########### MOTIF ###########################
eq2_motif = all_tf_data %>%
pivot_wider(id_cols = c(tf, perm),
names_from = sig_gene,
values_from = c(eq2_motif,num_genes)) %>%
mutate(eq2_motif_diff=eq2_motif_TRUE-eq2_motif_FALSE,
num_sig = num_genes_TRUE)
eq2_motif_true = eq2_motif %>%
pivot_wider(id_cols = c(tf,num_sig), names_from = perm, values_from = eq2_motif_TRUE) %>%
pivot_longer(cols=as.character(1:10^4), names_to = c('perm'), values_to = 'true') %>%
rename(real = `0`)
moc_tf_eq2_chip = read.table("~/projects/overlap/sum_stats3/multi_or_cross_hits.eq2_true.tf_chipseq_stats.txt",
header=TRUE,sep='\t')
moc_tf_eq2_mot = read.table("~/projects/overlap/sum_stats3/multi_or_cross_hits.eq2_true.tf_motif_stats.txt",
header=TRUE,sep='\t')
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(real_stat.x,real_stat.y)) +
geom_point() +
geom_text(aes(label=ifelse(tf=='IRF1',as.character(tf),'')))
head(moc_tf_eq2_chip)
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_text(aes(label=ifelse(tf=='IRF1',as.character(tf),'')))
library(ggrepel)
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),'')))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),'')))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_label_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),'')))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_label(aes(label=ifelse(tf=='IRF1',as.character(tf),''))) +
theme_classic()
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_label(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic()
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_label_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic()
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic()
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point() +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real')
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real')
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none')
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values='black','forestgreen2')
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen2'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','darkgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen2'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf=='IRF1','red','black'))) +
geom_text_repel(aes(label=ifelse(tf=='IRF1',as.character(tf),NA))) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IZKF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IZKF1'),as.character(tf),NA))) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IZKF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IKZF1'),as.character(tf),NA))) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IKZF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IKZF1'),as.character(tf),NA))) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IKZF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IKZF1'),as.character(tf),NA)),
nudge.x=.1) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IKZF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IKZF1'),as.character(tf),NA)),
nudge.x=1) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
?geom_repel
?geom_text_repel
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IKZF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IKZF1'),as.character(tf),NA)),
nudge_x=1) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IKZF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IKZF1'),as.character(tf),NA)),
nudge_x=4) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
merge(moc_tf_eq2_chip, moc_tf_eq2_mot,
by='tf') %>%
ggplot(aes(num_lt.x,num_lt.y)) +
geom_point(aes(col=ifelse(tf%in%c('IRF1','IKZF1'),'red','black'))) +
geom_text_repel(aes(label=ifelse(tf%in%c('IRF1','IKZF1'),as.character(tf),NA)),
nudge_x=4) +
geom_hline(yintercept=5000) +
geom_vline(xintercept=5000) +
theme_classic() +
xlab('Number of ChIPseq permutations less than real') +
ylab('Number of motif permutation less than real') +
theme(legend.position='none') +
scale_color_manual(values=c('black','forestgreen'))
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
library(heatmap3)
setwd("~/projects/TFeQTLs_figs/")
tf_info = read.table("../TFi-eQTL/input_files/TFs.info.curated.txt",
header=TRUE, sep='\t')
tiss_info = read.table("../TFi-eQTL/input_files/tissue_info.final.txt",
header=TRUE, sep='\t')
genes = read.table("../TFi-eQTL/variant_sets/caviar_var.95set.eqtls.MAF05.overlap.genesort.txt",
header=TRUE, sep='\t') %>%
group_by(gene) %>%
summarize(num=n())
sig_hits = read.table("../TFi-eQTL/eqtl_sig/all.fdr20.sig_eqtls.txt",
header=TRUE, sep='\t') %>%
merge(tf_info %>% select(1:2) %>% rename(tf_id = Name),
by.x=c('tf'), by.y=c('TF')) %>%
merge(tiss_info, by.x="tiss", by.y="TISSUE_NAME") %>%
filter(tf_id != as.character(gene)) %>%
mutate(tiss = factor(tiss, levels=unique(as.character(tiss_info$TISSUE_NAME))))
all_genes = genes %>% pull(gene) %>% as.character()
all_tfs = tf_info %>% pull(TF) %>% as.character()
all_gene_tf = sapply(all_genes, function(gene) {
sapply(all_tfs, function(tf) {
paste(gene,tf,sep='_')
})
})
sig_hits_cross = read.table("../overlap/replication/sig_assoc.fdr05.cross_hits.txt",
header=TRUE, sep='\t')
this_table=table(all_gene_tf %in% (sig_hits %>% unite(gene_tf,gene,tf) %>% pull(gene_tf)),
all_gene_tf %in% (sig_hits_cross %>% unite(gene_tf,phenotype_id,tf) %>% pull(gene_tf)))
this_fi = fisher.test(this_table)
print(this_fi)
data.frame(tiss1=c(tiss1), tiss2=c('cross'),
fi_or = this_fi$estimate, fi_logor = log2(this_fi$estimate), fi_p = this_fi$p.value)
data.frame(tiss1=c('all_tiss'), tiss2=c('cross'),
fi_or = this_fi$estimate, fi_logor = log2(this_fi$estimate), fi_p = this_fi$p.value)
print(this_fi$p.value)
$double.xmin
double.xmin
.Machine$double.xmin
data.frame(tiss1=c('all_tiss'), tiss2=c('cross'),
fi_or = this_fi$estimate, fi_logor = log2(this_fi$estimate), fi_p = this_fi$p.value)
.Machine$double.xmin
this_table=table(all_gene_tf_prot %in% (sig_hits %>% filter(TISSUE_ABBRV==tiss1) %>% unite(gene_tf,gene,tf) %>% pull(gene_tf)),
all_gene_tf_prot %in% (sig_hits_prot %>% unite(gene_tf,phenotype_id,tf) %>% pull(gene_tf)))
sig_hits_prot = read.table("../overlap/replication/sig_assoc.fdr20.protein_hits_filtered.txt",
header=TRUE, sep='\t')
prot_stats = read.table("../prot_corrs/prot_stats.txt",
header=TRUE, sep='\t')
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
library(heatmap3)
setwd("~/projects/TFeQTLs_figs/")
tf_info = read.table("../TFi-eQTL/input_files/TFs.info.curated.txt",
header=TRUE, sep='\t')
tiss_info = read.table("../TFi-eQTL/input_files/tissue_info.final.txt",
header=TRUE, sep='\t')
genes = read.table("../TFi-eQTL/variant_sets/caviar_var.95set.eqtls.MAF05.overlap.genesort.txt",
header=TRUE, sep='\t') %>%
group_by(gene) %>%
summarize(num=n())
sig_hits = read.table("../TFi-eQTL/eqtl_sig/all.fdr20.sig_eqtls.txt",
header=TRUE, sep='\t') %>%
merge(tf_info %>% select(1:2) %>% rename(tf_id = Name),
by.x=c('tf'), by.y=c('TF')) %>%
merge(tiss_info, by.x="tiss", by.y="TISSUE_NAME") %>%
filter(tf_id != as.character(gene)) %>%
mutate(tiss = factor(tiss, levels=unique(as.character(tiss_info$TISSUE_NAME))))
all_genes = genes %>% pull(gene) %>% as.character()
all_tfs = tf_info %>% pull(TF) %>% as.character()
all_gene_tf = sapply(all_genes, function(gene) {
sapply(all_tfs, function(tf) {
paste(gene,tf,sep='_')
})
})
sig_hits_cross = read.table("../overlap/replication/sig_assoc.fdr05.cross_hits.txt",
header=TRUE, sep='\t')
fi_tsts_cross_mat = fi_tsts_cross %>%
filter(tiss2=='cross') %>%
select(c(tiss1,tiss2,'fi_logor')) %>%
pivot_wider(names_from=tiss2,
values_from=fi_logor) %>%
column_to_rownames("tiss1") %>%
as.matrix()
this_table=table(all_gene_tf %in% (sig_hits %>% unite(gene_tf,gene,tf) %>% pull(gene_tf)),
all_gene_tf %in% (sig_hits_cross %>% unite(gene_tf,phenotype_id,tf) %>% pull(gene_tf)))
this_fi = fisher.test(this_table)
print(this_fi)
data.frame(tiss1=c('all_tiss'), tiss2=c('cross'),
fi_or = this_fi$estimate, fi_logor = log2(this_fi$estimate), fi_p = this_fi$p.value)
.Machine$double.xmin
sig_hits_prot = read.table("../overlap/replication/sig_assoc.fdr20.protein_hits_filtered.txt",
header=TRUE, sep='\t')
prot_stats = read.table("../prot_corrs/prot_stats.txt",
header=TRUE, sep='\t')
all_gene_tf_prot = sapply(all_genes, function(gene) {
sapply(unique(prot_stats %>% filter(n_vals >= 20) %>% pull(tf) %>% as.character()),
function(tf) {
paste(gene,tf,sep='_')
}) })
this_table=table(all_gene_tf_prot %in% (sig_hits %>% filter(TISSUE_ABBRV==tiss1) %>% unite(gene_tf,gene,tf) %>% pull(gene_tf)),
all_gene_tf_prot %in% (sig_hits_prot %>% unite(gene_tf,phenotype_id,tf) %>% pull(gene_tf)))
this_fi = fisher.test(this_table)
print(this_fi)
data.frame(tiss1=c('all_tiss'), tiss2=c('cross'),
fi_or = this_fi$estimate, fi_logor = log2(this_fi$estimate), fi_p = this_fi$p.value)
.Machine$double.xmin
data.frame(tiss1=c('all_tiss'), tiss2=c('prot'),
fi_or = this_fi$estimate, fi_logor = log2(this_fi$estimate), fi_p = this_fi$p.value)
this_table=table(all_gene_tf_prot %in% (sig_hits %>% unite(gene_tf,gene,tf) %>% pull(gene_tf)),
all_gene_tf_prot %in% (sig_hits_prot %>% unite(gene_tf,phenotype_id,tf) %>% pull(gene_tf)))
this_fi = fisher.test(this_table)
print(this_fi)
data.frame(tiss1=c('all_tiss'), tiss2=c('prot'),
fi_or = this_fi$estimate, fi_logor = log2(this_fi$estimate), fi_p = this_fi$p.value)
fi_tst_cross_prot = table(all_gene_tf_prot %in% (sig_hits_cross %>% unite(gene_tf,phenotype_id,tf) %>% pull(gene_tf)),
all_gene_tf_prot %in% (sig_hits_prot %>% unite(gene_tf,phenotype_id,tf) %>% pull(gene_tf)) ) %>%
fisher.test()
fi_tst_cross_prot
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
setwd("~/projects/MANUSCRIPT/")
asb_annot_filt1 = read.table("data_tables/overlap/ASB_susan_filtexpASB1.txt",
header=TRUE,sep='\t')
asb_annot_filt1 %>%
ggplot(aes(fct_reorder(tf, real_stat),real_stat,
size=exp_ASB_corr)) +
geom_col(width=.05) +
geom_hline(yintercept=0) +
geom_point(aes(col = -log10(p_perm_tf))) +
scale_color_gradient(low='gray',high='darkorchid4',
limits=c(0,2)) +
coord_flip() +
theme_classic()
asb_annot_filt2 = read.table("data_tables/overlap/ASB_susan_filtexpASB2.txt",
header=TRUE,sep='\t')
asb_annot_filt2 %>%
ggplot(aes(fct_reorder(tf, real_stat),real_stat,
size=exp_ASB_corr)) +
geom_col(width=.05) +
geom_point(aes(col = -log10(p_perm_tf))) +
scale_color_gradient(low='gray',high='darkorchid4',
limits=c(0,2)) +
coord_flip() +
theme_classic()
View(asb_annot_filt1)
View(asb_annot_filt2)
